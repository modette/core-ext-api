extensions:
	api: Apitte\Core\DI\ApiExtension
	http.psr7: Contributte\Psr7\DI\Psr7HttpExtension
	middlewares: Contributte\Middlewares\DI\MiddlewaresExtension
	phpdoc: Contributte\PhpDoc\DI\PhpDocExtension

api:
	catchException: %catchExceptions.api%
	debug: %debugMode%
	plugins:
		Apitte\Core\DI\Plugin\CoreSchemaPlugin:
		Apitte\Core\DI\Plugin\CoreServicesPlugin:
		Apitte\Core\DI\Plugin\CoreDecoratorPlugin:
		Apitte\Core\DI\Plugin\CoreMappingPlugin:
			request:
				validator: Apitte\Core\Mapping\Validator\SymfonyValidator(@phpdoc.reader)
		Apitte\Console\DI\ConsolePlugin:
		Apitte\Debug\DI\DebugPlugin:
			debug:
				panel: %debug.panels.api.routes%
		Apitte\Middlewares\DI\MiddlewaresPlugin:
			autobasepath: true
			tracy: false
		Apitte\Negotiation\DI\NegotiationPlugin:
			unification: true
		Apitte\OpenApi\DI\OpenApiPlugin:
			swaggerUi:
				panel: %debug.panels.api.openApi%

middlewares:
	debug: %debug.panels.api.middlewares%

modette.http.frontRouter:
	api:
		enable: true

parameters:
	catchExceptions:
		api: false
	debug:
		panels:
			api:
				middlewares: false
				routes: false
				openApi: false

phpdoc:
	temp: %tempDir%/cache/doctrine.annotations

services:
	middleware.tryCatch:
		factory: Contributte\Middlewares\TryCatchMiddleware
		tags: [middleware: [priority: 1]]
		setup:
			- setDebugMode(%debugMode%)
			- setCatchExceptions(false) # affect only debug mode
	middlewares.logging:
		factory: Contributte\Middlewares\LoggingMiddleware
		arguments: [@monolog.logger.default]
		tags: [middleware: [priority: 100]]
	middleware.methodOverride:
		factory: Contributte\Middlewares\MethodOverrideMiddleware
		tags: [middleware: [priority: 150]]
